version: '2'

services:
  
  mydb:
    image: postgres
    environment:
      POSTGRES_PASSWORD: abc123
      POSTGRES_USER: postgres
      POSTGRES_DB: worldSim
    restart: always
  server:
    build: ./world/docker_deploy
    command: bash -c "./wait-for-it.sh mydb:5432 --strict -- ./server 12345 23456 0"
    ports:
      - "12345:12345"
      - "23456:23456"
    depends_on:
      - mydb
  amazonproxy:
    build: ./amazonproxy
    volumes:
      - .:/amazonproxy
    expose:
      - "55555"
    ports:
      - "55555:55555"
    depends_on:
      - mydb
      - server
      - db
      - miniamazon

  miniamazon:
      image: postgres
      environment:
         POSTGRES_PASSWORD: passw0rd
         POSTGRES_USER: postgres
         POSTGRES_DB: miniamazon
      restart: always
  db:
      image: postgres
      volumes:
            - data-volume:/var/lib/postgresql/data
      environment:
         POSTGRES_PASSWORD: passw0rd
         POSTGRES_USER: postgres
         POSTGRES_DB: miniamazon
      restart: always
 
  web-init:
      build: ./web-app
      command: /code/initserver.sh
      volumes:
        - ./web-app:/code
      depends_on:
        - db
        - miniamazon
  web:
      build: ./web-app
      user: nobody
      command: /code/runserver.sh
      volumes:
        - ./web-app:/code
      expose:
        - "8000"
      depends_on:
        - web-init
  nginx:
     image: nginx:latest
     ports:
       - "8000:8000"
     volumes:
       - ./nginx/config:/etc/nginx/conf.d
     depends_on:
       - web
volumes:
   data-volume: 